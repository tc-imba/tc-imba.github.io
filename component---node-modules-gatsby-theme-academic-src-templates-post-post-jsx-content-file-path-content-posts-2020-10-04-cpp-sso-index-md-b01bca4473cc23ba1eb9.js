"use strict";(self.webpackChunktc_imba_github_io=self.webpackChunktc_imba_github_io||[]).push([[769],{979:function(e,n,a){a.r(n),a.d(n,{default:function(){return z}});var t=a(5680),s=a(6540);function o(e){const n=Object.assign({h2:"h2",a:"a",span:"span",h3:"h3",p:"p",ul:"ul",li:"li"},(0,t.RP)(),e.components);return s.createElement(s.Fragment,null,s.createElement(n.h2,{id:"implementation-of-"},s.createElement(n.a,{"aria-hidden":"true",tabIndex:"-1",href:"#implementation-of-"},s.createElement(n.span,{className:"icon icon-link"})),"Implementation of ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">std::string</code>'}})),"\n",s.createElement(n.h3,{id:""},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">g++</code>'}})),"\n",s.createElement(n.p,null,"In ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">g++</code>'}})," (libstdc++) implementation, Assuming a 64-bit OS, the class structure (with the size of each attribute) can be simplified as:"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="cpp"><pre class="language-cpp"><code class="language-cpp"><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">value_type</span><span class="token operator">></span>\n<span class="token keyword">class</span> <span class="token class-name">basic_string</span> <span class="token punctuation">{</span>\n    <span class="token keyword">enum</span> <span class="token punctuation">{</span> __min_cap <span class="token operator">=</span> <span class="token number">15</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>value_type<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    pointer   __data_<span class="token punctuation">;</span>                     <span class="token comment">//  8 bytes</span>\n    size_type __size_<span class="token punctuation">;</span>                     <span class="token comment">//  8 bytes</span>\n\n    <span class="token keyword">union</span> <span class="token punctuation">{</span>\n        value_type __data_<span class="token punctuation">[</span>__min_cap <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 16 bytes</span>\n        size_type  __cap_<span class="token punctuation">;</span>                 <span class="token comment">//  8 bytes</span>\n    <span class="token punctuation">}</span> __u_<span class="token punctuation">;</span>                                <span class="token comment">// 16 bytes</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>                                         <span class="token comment">// 32 bytes</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"The capacity (",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">size_type</code>'}}),", 8 bytes) is combined with a char array in a union if the string length is less than local capacity."),"\n",s.createElement(n.p,null,"The template argument ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">value_type</code>'}})," is define to support both ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">char</code>'}})," and ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">wchar_t</code>'}}),"."),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">basic_string&lt;char></code>'}})," has a local capacity of 15."),"\n",s.createElement(n.li,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">basic_string&lt;wchar_t></code>'}})," has a local capacity of 7."),"\n",s.createElement(n.li,null,"we need one more char to store ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">\\0</code>'}}),"."),"\n"),"\n",s.createElement("br"),"\n",s.createElement(n.p,null,"Both of them have a total size of 32 bytes. The size of the char array is 16 bytes, because in ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">g++</code>'}}),", a minimum block allocated by dynamic memory allocation (malloc/new) is 16 bytes (so less than 16 bytes is not a good optimization)."),"\n",s.createElement(n.p,null,"You may notice that there exists an overhead of 8 bytes in the union. This is ignorable if you do not need to store huge amounts of small strings in memory."),"\n",s.createElement(n.h3,{id:"-1"},s.createElement(n.a,{"aria-hidden":"true",tabIndex:"-1",href:"#-1"},s.createElement(n.span,{className:"icon icon-link"})),s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">llvm/clang</code>'}})),"\n",s.createElement(n.p,null,"In ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">llvm/clang</code>'}})," (libc++) implementation, the overhead can be cancelled by a smarter design: using the entire structure to store the small string."),"\n",s.createElement(n.p,null,"We define two modes for each string: long string mode and short string mode, each in a separate struct, and then combine them together with a union."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="cpp"><pre class="language-cpp"><code class="language-cpp"><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">value_type</span><span class="token operator">></span>\n<span class="token keyword">class</span> <span class="token class-name">basic_string</span> <span class="token punctuation">{</span>\n    <span class="token keyword">struct</span> <span class="token class-name">__long</span> <span class="token punctuation">{</span>\n        size_type __cap_<span class="token punctuation">;</span>               <span class="token comment">// 8      bytes</span>\n        size_type __size_<span class="token punctuation">;</span>              <span class="token comment">// 8      bytes</span>\n        pointer   __data_<span class="token punctuation">;</span>              <span class="token comment">// 8      bytes</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">enum</span> <span class="token punctuation">{</span>__min_cap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>__long<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>value_type<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token operator">?</span>\n                      <span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>__long<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>value_type<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">struct</span> <span class="token class-name">__short</span> <span class="token punctuation">{</span>\n        <span class="token keyword">union</span> <span class="token punctuation">{</span>\n            <span class="token keyword">unsigned</span> <span class="token keyword">char</span> __size_<span class="token punctuation">;</span>      <span class="token comment">// 1      byte</span>\n            value_type __lx<span class="token punctuation">;</span>            <span class="token comment">// 1 (2)  bytes for char(wchar_t)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>                              <span class="token comment">// 1 (2)  bytes for char(wchar_t)</span>\n        value_type __data_<span class="token punctuation">[</span>__min_cap<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 23(22) bytes for char(wchar_t)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>                                  <span class="token comment">// 24     bytes</span>\n\n    <span class="token keyword">union</span> <span class="token punctuation">{</span>\n        __long  __l<span class="token punctuation">;</span>                    <span class="token comment">// 24     bytes</span>\n        __short __s<span class="token punctuation">;</span>                    <span class="token comment">// 24     bytes</span>\n    <span class="token punctuation">}</span> __r_<span class="token punctuation">;</span>                             <span class="token comment">// 24     bytes</span>\n<span class="token punctuation">}</span>\n</code></pre></div>'}}),"\n",s.createElement(n.p,null,"In short string mode, the first byte of the string stores the size (which is less than 24). The rest bytes store the string locally. The variable ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">__lx</code>'}})," is used for alignment with ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">wchar_t</code>'}}),"."),"\n",s.createElement(n.p,null,"In order to distinguish a long string from a short one, the first byte of a long string (also the first byte of its capacity) is set to a mask 0x80 (which is larger than the maximum length of short string). This mask actually half the maximum capacity of the long string, but 0x 7fff ffff ffff ffff is huge enough comparing to achievable memory size."),"\n",s.createElement(n.p,null,"This design eliminates the size of a string to 24 bytes, and provides a longer local string (15 -> 22 for ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">char</code>'}}),", or 7 -> 10 for ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">wchar_t</code>'}}),")."))}var l=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.RP)(),e.components);return n?s.createElement(n,e,s.createElement(o,e)):o(e)},c=a(6462),p=a(2532),r=a(5093),i=a.n(r),u=a(3603),m=a(6157),d=a(5035),k=a(5196),g=a(4388),h=a(5751),_=a(5816),y=a(266),f=a(8947),E=a.n(f),b=a(6386),w=a.n(b),x=a(1583),T=a(2011),v=a(2394),I=a(9073),S=a(2888),A=a(5413),M=a(2957);function L(e){let{data:{mdx:n},children:a}=e;const{fields:{slug:{html:t,nonce:o,htmlEncrypted:l,title:r,excerpt:f,path:b,date:L,commit:z,type:H}},frontmatter:{cover:C},tableOfContents:N}=n,B=i().unix(z).format("MMM Do YYYY"),O=A.A.formatDate(L),F=C?(0,p.c)(C):null,P=(0,S.Q6)(),j=A.A.generateFullUrl(P,b);console.log(o);const{0:Y,1:U}=(0,s.useState)({locked:""!==o,failed:!1,html:t}),[D,J]=s.useState(!1),[R,G]=s.useState(""),W=()=>{J(!D)},$=e=>{G(e)},Q=()=>{if(Y.locked)try{const e=w().decodeUTF8(R),n=w().decodeBase64(o),a=E().hash(e).slice(0,E().secretbox.keyLength),t=w().decodeBase64(l),s=E().secretbox.open(t,n,a),c=w().encodeUTF8(s);U({locked:!1,failed:!1,html:c})}catch(e){U({locked:!0,failed:!0,html:""})}},q=[];O&&q.push(`Posted: ${O}`),z>0&&O!==B&&q.push(`Edited: ${B}`);const K=(0,s.useContext)(I.Ay),V=(0,c.useLocation)();(0,s.useEffect)((()=>{K&&K.setState&&Object.getOwnPropertyNames(N).length&&K.setState({tableOfContents:N,pathname:V.pathname})}),[]);const X=()=>Y.locked?s.createElement(u.A,{description:""},s.createElement(m.A,{fluid:!0},s.createElement(d.A,{justify:"center",type:"flex"},s.createElement(k.A,{xs:24,sm:24,md:24,lg:16,xl:12},Y.failed?s.createElement(g.A,{type:"error"},"Wrong password! Please try again."):s.createElement(g.A,{type:"info"},"This article is encrypted by xsalsa20-poly1305 algorithm."),s.createElement(h.A,{style:{marginTop:"1rem"}},s.createElement(_.A,{type:D?"text":"password",value:R,placeholder:"Enter password to unlock this article.",onPressEnter:Q,onChange:$,size:"lg"}),s.createElement(h.A.Button,{onClick:W},D?s.createElement(M.A,{icon:"eye"}):s.createElement(M.A,{icon:"eye-slash"}))))))):s.createElement("article",{className:"markdown-body"},a),Z=()=>s.createElement("article",{className:"markdown-body"},a);return s.createElement(s.Fragment,null,s.createElement(v.A,{title:r,description:f,path:b,keywords:["FullStack developer","Javascript","ReactJS","NodeJS","Gatsby","technology"]}),s.createElement("div",null,s.createElement("div",{className:"marginTopTitle"},s.createElement("h1",{className:"titleSeparate"},r)),s.createElement("div",{style:{color:"var(--rs-text-tertiary)",marginBottom:"1rem"}},q.join(", ")),s.createElement(y.A,{style:{marginBottom:"1rem"}},s.createElement(y.A.Item,{as:k.A,xs:24,sm:24,md:F?12:24,lg:F?16:24},s.createElement(x.A,{title:"Abstract",style:{height:"100%"}},s.createElement("p",{style:{marginBottom:"0"},dangerouslySetInnerHTML:{__html:A.A.parseMarkDown(f,!0)}}))),F?s.createElement(y.A.Item,{as:k.A,xs:24,sm:24,md:12,lg:8},s.createElement("div",{style:{height:"100%"}},s.createElement(p.G,{image:F,title:r,alt:r}))):null),""===o?s.createElement(Z):s.createElement(X)),"posts"===H?s.createElement("div",{style:{marginTop:"2rem"}},s.createElement(T.A,{pageCanonicalUrl:j,pageId:r})):null)}function z(e){return s.createElement(L,e,s.createElement(l,e))}}}]);
//# sourceMappingURL=component---node-modules-gatsby-theme-academic-src-templates-post-post-jsx-content-file-path-content-posts-2020-10-04-cpp-sso-index-md-b01bca4473cc23ba1eb9.js.map