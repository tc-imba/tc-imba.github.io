{"version":3,"file":"component---node-modules-gatsby-theme-academic-src-templates-post-post-jsx-content-file-path-content-research-mapf-continuous-lns-index-md-c4e3a25bea16725ea2b3.js","mappings":"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","sources":["webpack://tc-imba.github.io/./content/research/mapf-continuous-lns/index.md","webpack://tc-imba.github.io/./node_modules/gatsby-theme-academic/src/templates/post/post.jsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/tc-imba.github.io/tc-imba.github.io/content/research/mapf-continuous-lns/index.md\";\nimport {useLocation} from '@gatsbyjs/reach-router';\nimport {graphql} from 'gatsby';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport moment from 'moment';\nimport React, {useState, useEffect, useContext} from 'react';\nimport {Panel, Row, Col, Input, Message, FlexboxGrid, InputGroup, Grid} from 'rsuite';\nimport nacl from 'tweetnacl';\nimport naclUtil from 'tweetnacl-util';\nimport CodeBox from '../../components/CodeBox';\nimport Comment from '../../components/Comment';\nimport SEO from '../../components/Seo';\nimport Context from '../../utils/context';\nimport {useSiteMetadata} from '@/utils/hooks';\nimport Utils from '../../utils/pageUtils.mjs';\nimport './highlight-syntax.less';\nimport Icon from '@/components/Icon';\nfunction Post({data: {mdx}, children}) {\n  const {fields: {slug: {html, nonce, htmlEncrypted, title, excerpt, path, date, commit, type}}, frontmatter: {cover}, tableOfContents} = mdx;\n  const editTime = moment.unix(commit).format('MMM Do YYYY');\n  const postTime = Utils.formatDate(date);\n  const image = cover ? getImage(cover) : null;\n  const siteMetadata = useSiteMetadata();\n  const canonicalUrl = Utils.generateFullUrl(siteMetadata, path);\n  console.log(nonce);\n  const [state, setState] = useState({\n    locked: nonce !== '',\n    failed: false,\n    html\n  });\n  const [passwordVisible, setPasswordVisible] = React.useState(false);\n  const [password, setPassword] = React.useState('');\n  const handlePasswordVisibleChange = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const handlePasswordChange = value => {\n    setPassword(value);\n  };\n  const onUnlock = () => {\n    if (state.locked) {\n      try {\n        const passwordDecoded = naclUtil.decodeUTF8(password);\n        const nonceBuffer = naclUtil.decodeBase64(nonce);\n        const keyBuffer = nacl.hash(passwordDecoded).slice(0, nacl.secretbox.keyLength);\n        const box = naclUtil.decodeBase64(htmlEncrypted);\n        const htmlBuffer = nacl.secretbox.open(box, nonceBuffer, keyBuffer);\n        const htmlReal = naclUtil.encodeUTF8(htmlBuffer);\n        setState({\n          locked: false,\n          failed: false,\n          html: htmlReal\n        });\n      } catch (e) {\n        setState({\n          locked: true,\n          failed: true,\n          html: ''\n        });\n      }\n    }\n  };\n  const time = [];\n  if (postTime) {\n    time.push(`Posted: ${postTime}`);\n  }\n  if (commit > 0 && postTime !== editTime) {\n    time.push(`Edited: ${editTime}`);\n  }\n  const context = useContext(Context);\n  const location = useLocation();\n  useEffect(() => {\n    if (context && context.setState && Object.getOwnPropertyNames(tableOfContents).length) {\n      context.setState({\n        tableOfContents,\n        pathname: location.pathname\n      });\n    }\n  }, []);\n  const EncryptedBody = () => {\n    return state.locked ? React.createElement(Panel, {\n      description: \"\"\n    }, React.createElement(Grid, {\n      fluid: true\n    }, React.createElement(Row, {\n      justify: \"center\",\n      type: \"flex\"\n    }, React.createElement(Col, {\n      xs: 24,\n      sm: 24,\n      md: 24,\n      lg: 16,\n      xl: 12\n    }, state.failed ? React.createElement(Message, {\n      type: \"error\"\n    }, \"Wrong password! Please try again.\") : React.createElement(Message, {\n      type: \"info\"\n    }, \"This article is encrypted by xsalsa20-poly1305 algorithm.\"), React.createElement(InputGroup, {\n      style: {\n        marginTop: '1rem'\n      }\n    }, React.createElement(Input, {\n      type: passwordVisible ? 'text' : 'password',\n      value: password,\n      placeholder: \"Enter password to unlock this article.\",\n      onPressEnter: onUnlock,\n      onChange: handlePasswordChange,\n      size: \"lg\"\n    }), React.createElement(InputGroup.Button, {\n      onClick: handlePasswordVisibleChange\n    }, passwordVisible ? React.createElement(Icon, {\n      icon: \"eye\"\n    }) : React.createElement(Icon, {\n      icon: \"eye-slash\"\n    }))))))) : React.createElement(\"article\", {\n      className: \"markdown-body\"\n    }, children);\n  };\n  const PublicBody = () => {\n    return React.createElement(\"article\", {\n      className: \"markdown-body\"\n    }, children);\n  };\n  return React.createElement(React.Fragment, null, React.createElement(SEO, {\n    title: title,\n    description: excerpt,\n    path: path,\n    keywords: ['FullStack developer', 'Javascript', 'ReactJS', 'NodeJS', 'Gatsby', 'technology']\n  }), React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"marginTopTitle\"\n  }, React.createElement(\"h1\", {\n    className: \"titleSeparate\"\n  }, title)), React.createElement(\"div\", {\n    style: {\n      color: 'var(--rs-text-tertiary)',\n      marginBottom: '1rem'\n    }\n  }, time.join(', ')), React.createElement(FlexboxGrid, {\n    style: {\n      marginBottom: '1rem'\n    }\n  }, React.createElement(FlexboxGrid.Item, {\n    as: Col,\n    xs: 24,\n    sm: 24,\n    md: image ? 12 : 24,\n    lg: image ? 16 : 24\n  }, React.createElement(CodeBox, {\n    title: \"Abstract\",\n    style: {\n      height: '100%'\n    }\n  }, React.createElement(\"p\", {\n    style: {\n      marginBottom: '0'\n    },\n    dangerouslySetInnerHTML: {\n      __html: Utils.parseMarkDown(excerpt, true)\n    }\n  }))), image ? React.createElement(FlexboxGrid.Item, {\n    as: Col,\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 8\n  }, React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    }\n  }, React.createElement(GatsbyImage, {\n    image: image,\n    title: title,\n    alt: title\n  }))) : null), nonce === '' ? React.createElement(PublicBody) : React.createElement(EncryptedBody)), type === 'posts' ? React.createElement(\"div\", {\n    style: {\n      marginTop: '2rem'\n    }\n  }, React.createElement(Comment, {\n    pageCanonicalUrl: canonicalUrl,\n    pageId: title\n  })) : null);\n}\nexport const pageQuery = graphql`\n  query($contentFilePath: String!) {\n    mdx(internal: { contentFilePath: { eq: $contentFilePath } }) {\n      tableOfContents\n      frontmatter {\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              layout: CONSTRAINED\n              width: 1000\n            )\n          }\n        }\n      }\n      fields {\n        slug {\n          html\n          htmlEncrypted\n          nonce\n          timeToRead\n          title\n          date\n          tags\n          path\n          excerpt\n          links { \n            name\n            url\n          }\n          commit\n          type\n        }\n      }\n      internal {\n        contentFilePath\n      }\n    }\n  }\n`;\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","React","wrapper","MDXLayout","Object","assign","_provideComponents","components","Post","_ref","data","mdx","children","fields","slug","html","nonce","htmlEncrypted","title","excerpt","path","date","commit","type","frontmatter","cover","tableOfContents","editTime","moment","format","postTime","Utils","formatDate","image","getImage","siteMetadata","useSiteMetadata","canonicalUrl","generateFullUrl","console","log","state","setState","useState","locked","failed","passwordVisible","setPasswordVisible","password","setPassword","handlePasswordVisibleChange","handlePasswordChange","value","onUnlock","passwordDecoded","naclUtil","nonceBuffer","keyBuffer","nacl","slice","keyLength","box","htmlBuffer","open","htmlReal","e","time","push","context","useContext","Context","location","useLocation","useEffect","getOwnPropertyNames","length","pathname","EncryptedBody","Panel","description","Grid","fluid","Row","justify","Col","xs","sm","md","lg","xl","Message","InputGroup","style","marginTop","Input","placeholder","onPressEnter","onChange","size","Button","onClick","Icon","icon","className","PublicBody","SEO","keywords","color","marginBottom","join","FlexboxGrid","Item","as","CodeBox","height","dangerouslySetInnerHTML","__html","parseMarkDown","GatsbyImage","alt","Comment","pageCanonicalUrl","pageId","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}