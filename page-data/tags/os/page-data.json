{"componentChunkName":"component---node-modules-gatsby-theme-academic-src-templates-tags-index-jsx","path":"/tags/os/","result":{"data":{"allTag":{"edges":[{"node":{"color":"lime","name":"cpp","description":null,"path":"/tags/cpp"}},{"node":{"color":"green","name":"os","description":null,"path":"/tags/os"}},{"node":{"color":"gold","name":"building","description":null,"path":"/tags/building"}},{"node":{"color":"orange","name":"blog","description":null,"path":"/tags/blog"}},{"node":{"color":"cyan","name":"security","description":null,"path":"/tags/security"}},{"node":{"color":"volcano","name":"ai","description":null,"path":"/tags/ai"}},{"node":{"color":"red","name":"scheduling","description":null,"path":"/tags/scheduling"}},{"node":{"color":"magenta","name":"algorithm","description":null,"path":"/tags/algorithm"}},{"node":{"color":"blue","name":"gatsby","description":null,"path":"/tags/gatsby"}}]},"allMdx":{"edges":[{"node":{"frontmatter":{"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/8df04c8ddd2f94f0d9d73d5e6e40fc82/3ea76/preview.png","srcSet":"/static/8df04c8ddd2f94f0d9d73d5e6e40fc82/3ea76/preview.png 320w,\n/static/8df04c8ddd2f94f0d9d73d5e6e40fc82/5a45b/preview.png 547w","sizes":"(min-width: 320px) 320px, 100vw"},"sources":[{"srcSet":"/static/8df04c8ddd2f94f0d9d73d5e6e40fc82/4a8d5/preview.webp 320w,\n/static/8df04c8ddd2f94f0d9d73d5e6e40fc82/d04f5/preview.webp 547w","type":"image/webp","sizes":"(min-width: 320px) 320px, 100vw"}]},"width":320,"height":180}}}},"fields":{"slug":{"links":[{"name":"GitHub","url":"https://github.com/BrickSchema"},{"name":"code","url":"https://github.com/BrickSchema/brick-example-server"}],"date":"Oct 2020 - Present","venue":"","authors":[],"path":"research/brick","title":"Playground: A Safe Building Operating","tags":["os","building"],"excerpt":"Building operating systems are an emerging class of system software that provides services to applications running on commercial buildings. The current state-of-the-art requires applications to be trusted and carefully monitored due to a lack of authorization, access control, and execution isolation mechanisms in existing building operating systems. Proposed solutions do not adequately handle the complexity and scale of modern buildings, therefore impeding the adoption of applications that can enhance energy efficiency, occupant health, comfort, and productivity. This work explores the execution of **untrusted** user-facing applications in smart building environments with a focus on maintenance and management labor costs, ensuring the practicality and long-term sustainability of adopting such applications. We develop an operating system abstraction for smart buildings, \\name, that incorporates a structured semantic representation of the building to inform the safe, multi-tenant execution of untrusted applications. We use the semantic representation to implement (a) a novel graph-based capability mechanism for fine-grained and expressive access control management, and (b) a resource isolation mechanism with preemptive interventions and passive telemetry-based live resource monitoring. We demonstrate \\name on several real applications in a real building.","type":"research"}}}}]},"allFile":{"edges":[]}},"pageContext":{"contentFilePath":"","tag":"os"}},"staticQueryHashes":["1552981879","2158328490","3013679938"],"slicesMap":{}}