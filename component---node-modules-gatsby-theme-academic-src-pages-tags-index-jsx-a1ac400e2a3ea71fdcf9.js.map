{"version":3,"file":"component---node-modules-gatsby-theme-academic-src-pages-tags-index-jsx-a1ac400e2a3ea71fdcf9.js","mappings":"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","sources":["webpack://tc-imba.github.io/./node_modules/gatsby-theme-academic/src/components/TagCard/tags.module.less","webpack://tc-imba.github.io/./node_modules/gatsby-theme-academic/src/components/TagCard/index.jsx","webpack://tc-imba.github.io/./node_modules/gatsby-theme-academic/src/pages/tags/index.jsx","webpack://tc-imba.github.io/./node_modules/lodash/_arrayAggregator.js","webpack://tc-imba.github.io/./node_modules/lodash/_baseAggregator.js","webpack://tc-imba.github.io/./node_modules/lodash/_baseAssignValue.js","webpack://tc-imba.github.io/./node_modules/lodash/_createAggregator.js","webpack://tc-imba.github.io/./node_modules/lodash/_defineProperty.js","webpack://tc-imba.github.io/./node_modules/lodash/keyBy.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var tagCard = \"tags-module--tagCard--39tbW\";\nexport var tagImg = \"tags-module--tagImg--1opFO\";\nexport var pd20px = \"tags-module--pd20px--1rQ2q\";","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport { useSiteMetadata } from '../../utils/hooks';\nimport Utils from '../../utils/pageUtils';\n\nimport * as style from './tags.module.less';\n\nconst TagCard = (props) => {\n  const {\n    img, name, description, color,\n  } = props;\n  const siteMetadata = useSiteMetadata();\n  const tagsPage = siteMetadata.pages.tags;\n  return (\n    <Link className={style.tagCard} to={Utils.resolvePageUrl(tagsPage, name)}>\n      <div className={style.tagCard}>\n        <div\n          className={style.tagImg}\n          style={{\n            backgroundImage: `url(${img})`,\n          }}\n        />\n        <div className={style.pd20px}>\n          <div className=\"textCenter\">\n            <h4 style={{ color: `${color}` }}>\n              #\n              {name}\n            </h4>\n          </div>\n          <p>\n            {description}\n          </p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default TagCard;\n","/* eslint-disable react/forbid-prop-types */\r\nimport {\r\n  Layout, Row, Col,\r\n} from 'antd';\r\nimport { graphql } from 'gatsby';\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Footer from '../../components/PageLayout/Footer';\r\nimport Header from '../../components/PageLayout/Header';\r\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\r\nimport SEO from '../../components/Seo';\r\nimport TagCard from '../../components/TagCard';\r\nimport { useSiteMetadata } from '../../utils/hooks';\r\n\r\nconst Tags = ({ data }) => {\r\n  const { allFile: { edges } } = data;\r\n  const rawTags = data.allMdx.edges\r\n    .map((edge) => edge.node.frontmatter.tags)\r\n    .reduce((prev, curr) => prev.concat(curr));\r\n  rawTags\r\n    .filter((tag, index) => index === rawTags.indexOf(tag))\r\n    .sort(); // Remove duplicates and sort values\r\n\r\n  const siteMetadata = useSiteMetadata();\r\n  const tagData = _.keyBy(siteMetadata.tags, 'id');\r\n  return (\r\n    <Layout className=\"outerPadding\">\r\n      <Layout className=\"container\">\r\n        <Header />\r\n        <SEO\r\n          title=\"Tags\"\r\n          description=\"This page consists of various Tags on various technologies that I'll be using\r\n          to write blogs. You can check the blogs related to the tags by clicking on any of the tags below.\"\r\n          path=\"tags\"\r\n        />\r\n        <SidebarWrapper>\r\n          <>\r\n            <div className=\"marginTopTitle\">\r\n              <h1 className=\"titleSeparate\">#Tags</h1>\r\n            </div>\r\n            <Row gutter={[30, 20]}>\r\n              {\r\n                edges.map((val) => (\r\n                  <Col key={val.node.name} xs={24} sm={24} md={12} lg={8}>\r\n                    <TagCard\r\n                      img={val.node.childImageSharp.fluid.src}\r\n                      name={val.node.name}\r\n                      description={tagData[val.node.name].description}\r\n                      color={tagData[val.node.name].color}\r\n                    />\r\n                  </Col>\r\n                ))\r\n              }\r\n            </Row>\r\n            <Footer />\r\n          </>\r\n        </SidebarWrapper>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nTags.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMdx: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              tags: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n            }).isRequired,\r\n          }).isRequired,\r\n        }).isRequired,\r\n      ).isRequired,\r\n    }).isRequired,\r\n    allFile: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            childImageSharp: PropTypes.shape({\r\n              fluid: PropTypes.object.isRequired,\r\n            }).isRequired,\r\n          }).isRequired,\r\n        }).isRequired,\r\n      ).isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport const query = graphql`\r\n  {\r\n    allMdx(filter: { fileAbsolutePath: { regex: \"/index.md$/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allFile(filter: { relativeDirectory: { eq: \"tags\" } }) {\r\n      edges {\r\n        node {\r\n          name\r\n          childImageSharp {\r\n            fluid(maxWidth: 320, maxHeight: 180, fit: CONTAIN, background: \"rgba(0,0,0,0)\") {\r\n              ...GatsbyImageSharpFluid_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Tags;\r\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n"],"names":["tagCard","props","img","name","description","color","tagsPage","useSiteMetadata","pages","tags","Link","className","style","to","Utils","backgroundImage","data","edges","allFile","rawTags","allMdx","map","edge","node","frontmatter","reduce","prev","curr","concat","filter","tag","index","indexOf","sort","siteMetadata","tagData","Header","title","path","Sidebar","gutter","val","key","xs","sm","md","lg","childImageSharp","fluid","src","Footer","module","exports","array","setter","iteratee","accumulator","length","value","baseEach","collection","defineProperty","object","arrayAggregator","baseAggregator","baseIteratee","isArray","initializer","func","getNative","Object","e","baseAssignValue","keyBy","createAggregator","result"],"sourceRoot":""}